def title	"DCTest"
def version	"1.0"
def description	"Ramping DC Generator Test"
def author	"David Olofson"
def copyright	"Copyright 2016 David Olofson"
def license	"Public domain. Do what you like with it. NO WARRANTY!"
def a2sversion	"1.9"

dcsaw(P md)
{
	struct { dc }
	mode md
	!per (p2d (P + tr))
	!on 1
	while on {
		value -.1; set value
		value .1; d per
	}
	value -.1; set value
	value 0; d (per / 2)

	1() { on 0 }
}

dcsaw2(P md)
{
	struct { dc }
	mode md
	!per (p2d (P + tr))
	!on 1
	!a .2
	while on {
		value (-a); set value
		value a; d per
		*a .95
	}
	value (-a); set value
	value 0; d (per / 2)

	1() { on 0 }
}

dcpw(P md)
{
	struct { dc }
	mode md
	!per (p2d (P + tr))
	!on 1
	!pw 0
	while on {
		!d1 (per * pw)
		value -.1
		if (md == STEP) {
			set value	// Not very interesting otherwise...
		}
		d d1
		value .1;	d (per - d1)
		+pw (.5 - pw * .01)
	}
	value 0; d per

	1() { on 0 }
}

dcbuzz(P md)
{
	struct { dc }
	mode md
	!per (p2d (P + tr))
	!on 1
	while on {
		value -.1;	set value
		value .1;	d (per * (rand .1 + .95))
	}
	value 0; d per

	1() { on 0 }
}

dcnoise(P md)
{
	struct { dc }
	mode md
	!perh (p2d (P + tr) / 2)
	!on 1
	while on {
		value -.15;	d (perh * (rand .6 + .7))
		value .15;	d (perh * (rand .6 + .7))
	}
	value 0; d perh

	1() { on 0 }
}

dcexplo(P md)
{
	struct { dc }
	mode md
	!perh (p2d (P + tr) / 2)
	!on 1
	!a .4
	while on {
		value (-a);	d (perh * (rand .6 + .7))
		value a;	d (perh * (rand .6 + .7))
		+perh .25
		*a .99
	}
	value 0; d perh

	1() { on 0 }
}

phrase(I md)
{
	tr 1
	2 {
		1:I 0n md;	td 1;	1<1
		1:I 2n md;	td 1;	1<1
		1:I 4n md;	td 1;	1<1
		1:I 5n md;	td 1;	1<1
		1:I 7n md;	td 1;	1<1
		1:I 5n md;	td 1;	1<1
		1:I 4n md;	td 1;	1<1
		1:I 2n md;	td 1;	1<1

		1:I -12n md;	td 1;	1<1
		1:I -5n md;	td 1;	1<1
		1:I 0n md;	td 1;	1<1
		1:I 7n md;	td 1;	1<1
		1:I 12n md;	td 1;	1<1
		1:I 19n md;	td 1;	1<1
		1:I 24n md;	td 1;	1<1
		1:I 31n md;	td 1;	1<1

		-tr 2
	}
}

test(md)
{
	phrase dcsaw md;	td 32
	phrase dcsaw2 md;	td 32
	phrase dcpw md;		td 32
	phrase dcbuzz md;	td 32
	phrase dcnoise md;	td 32
	1:dcexplo 3 md;		td 12; 1<1; td 4
}

easteregg(md)
{
	phrase dcsaw md;	td 16
	phrase dcsaw2 md;	td 16
	phrase dcpw md;		td 16
	phrase dcbuzz md;	td 16
}

export Song(P V=1 L=0)
{
	struct {
		inline 0 *
		fbdelay fb1 * *
		fbdelay fb2 * *
		panmix * >
	}
	fb1.fbdelay 160; fb1.fbgain .2
	fb1.ldelay 289; fb1.lgain .1
	fb1.rdelay 332; fb1.rgain .1

	fb2.fbdelay 345; fb2.fbgain .2
	fb2.ldelay 456; fb2.lgain .1
	fb2.rdelay 567; fb2.rgain .1

	tempo 120 4

	for {
		1:test units.dc.constants.STEP
		wait 1

		1:test units.dc.constants.LINEAR
		wait 1

		//1:dcsaw 37n1 0;	td 32;	1<1
	}

.stop
	1() { force stop }
}
